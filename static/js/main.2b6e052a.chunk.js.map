{"version":3,"sources":["components/Navbar.js","components/TopAnime.js","components/TopCharacters.js","components/TopManga.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","flexGrow","title","paddingLeft","Navbar","classes","className","AppBar","position","color","Container","maxWidth","Toolbar","style","marginRight","Typography","variant","noWrap","container","display","flexDirection","search","justifyContent","padding","paddingTop","paddingBottom","animeContainer","flexWrap","gap","paginationContainer","card","width","media","height","animeInfo","alignItems","rating","fontWeight","TopAnime","useState","searchText","setSearchText","topAnime","setTopAnime","page","setPage","useEffect","axios","get","then","res","anime","data","top","catch","err","console","log","map","Card","key","mal_id","href","url","target","rel","CardActionArea","CardMedia","image","image_url","CardContent","gutterBottom","component","rank","Paper","elevation","score","noValidate","autoComplete","onSubmit","e","preventDefault","length","results","TextField","id","type","label","onChange","value","fullWidth","Pagination","count","characterContainer","characterInfo","favorite","TopCharacters","topCharacters","setTopCharacters","characters","character","name","favorites","toLocaleString","mangaContainer","mangaInfo","TopManga","topManga","setTopManga","manga","Footer","paddingRight","margin","theme","createMuiTheme","palette","primary","main","secondary","TabPanel","props","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","backgroundColor","background","paper","footerContainer","App","setValue","ThemeProvider","Tabs","event","newValue","aria-label","indicatorColor","centered","Tab","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2b6e052a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    paddingLeft: '8%'\r\n  }\r\n});\r\n\r\nexport const Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Container maxWidth=\"lg\">\r\n          <Toolbar className={classes.title}>\r\n            <FavoriteIcon style={{ marginRight: 5 }} />\r\n            <Typography variant=\"h6\" noWrap>\r\n              Anime Finder\r\n            </Typography>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  search: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '5%',\r\n    paddingTop: '0.5rem',\r\n    paddingBottom: '2rem'\r\n  },\r\n  animeContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    gap: '10px',\r\n    justifyContent: 'center',\r\n    paddingBottom: '2rem'\r\n  },\r\n  paginationContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  card: {\r\n    width: 250,\r\n  },\r\n  media: {\r\n    height: 350,\r\n  },\r\n  animeInfo: {\r\n    display: 'flex',\r\n    alignItems: 'top',\r\n    justifyContent: 'space-between'\r\n  },\r\n  rating: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 0,\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nconst BASE_API = 'https://api.jikan.moe/v3';\r\n\r\nexport const TopAnime = () => {\r\n  const classes = useStyles();\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n  const [topAnime, setTopAnime] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const handlePageChange = (e, value) => {\r\n    setPage(value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(`${BASE_API}/top/anime/${page}`)\r\n      .then(res => {\r\n        const anime = res.data.top;\r\n\r\n        setTopAnime(anime);\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }, [page]);\r\n\r\n  // console.log(topAnime);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (searchText.length >= 3) {\r\n      axios.get(`${BASE_API}/search/anime?q=${searchText}`)\r\n        .then(res => {\r\n          const results = res.data.results;\r\n\r\n          setTopAnime(results);\r\n          // console.log(results);\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n\r\n      setSearchText('');\r\n    }\r\n  }\r\n\r\n  const searchField = () => {\r\n    return (\r\n      <TextField\r\n        id=\"searchAnime\"\r\n        type=\"search\"\r\n        label=\"Search Anime\"\r\n        variant=\"outlined\"\r\n        onChange={(e) => setSearchText(e.target.value)}\r\n        value={searchText}\r\n        fullWidth\r\n      />\r\n    )\r\n  }\r\n\r\n  const anime = topAnime.map(anime => {\r\n    return (\r\n      <Card className={classes.card} key={anime.mal_id}>\r\n        <a href={anime.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={anime.image_url}\r\n              title={anime.title}\r\n            />\r\n\r\n            <CardContent className={classes.animeInfo}>\r\n              <Typography gutterBottom variant=\"body2\" component=\"span\">\r\n                {anime.rank ? `#${anime.rank} ${anime.title}` : anime.title}\r\n              </Typography>\r\n\r\n              <Typography variant=\"caption\" component=\"span\" >\r\n                <Paper className={classes.rating} elevation={0}>\r\n                  <StarIcon style={{ marginRight: 2 }} color=\"primary\" />{anime.score}\r\n                </Paper>\r\n              </Typography>\r\n            </CardContent>\r\n\r\n          </CardActionArea>\r\n        </a>\r\n      </Card>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <form\r\n        className={classes.search}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {searchField()}\r\n      </form>\r\n\r\n      <div className={classes.animeContainer}>\r\n        {anime}\r\n      </div>\r\n\r\n      <div className={classes.paginationContainer}>\r\n        <Pagination\r\n          count={50}\r\n          page={page}\r\n          onChange={handlePageChange}\r\n          color=\"primary\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopAnime;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  search: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '5%',\r\n    paddingTop: '0.5rem',\r\n    paddingBottom: '2rem'\r\n  },\r\n  characterContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    gap: '10px',\r\n    justifyContent: 'center',\r\n    paddingBottom: '2rem'\r\n  },\r\n  paginationContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  card: {\r\n    width: 250,\r\n  },\r\n  media: {\r\n    height: 350,\r\n  },\r\n  characterInfo: {\r\n    display: 'flex',\r\n    alignItems: 'top',\r\n    justifyContent: 'space-between'\r\n  },\r\n  favorite: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 0,\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nconst BASE_API = 'https://api.jikan.moe/v3';\r\n\r\nexport const TopCharacters = () => {\r\n  const classes = useStyles();\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n  const [topCharacters, setTopCharacters] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const handlePageChange = (e, value) => {\r\n    setPage(value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(`${BASE_API}/top/characters/${page}`)\r\n      .then(res => {\r\n        const characters = res.data.top;\r\n\r\n        setTopCharacters(characters);\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }, [page]);\r\n\r\n  // console.log(topCharacters);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (searchText.length >= 3) {\r\n      axios.get(`${BASE_API}/search/character?q=${searchText}`)\r\n        .then(res => {\r\n          const results = res.data.results;\r\n\r\n          setTopCharacters(results);\r\n          // console.log(results);\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n\r\n      setSearchText('');\r\n    }\r\n  }\r\n\r\n  const searchField = () => {\r\n    return (\r\n      <TextField\r\n        id=\"searchCharacter\"\r\n        type=\"search\"\r\n        label=\"Search Character\"\r\n        variant=\"outlined\"\r\n        onChange={(e) => setSearchText(e.target.value)}\r\n        value={searchText}\r\n        fullWidth\r\n      />\r\n    )\r\n  }\r\n\r\n  const character = topCharacters.map(character => {\r\n    return (\r\n      <Card className={classes.card} key={character.mal_id}>\r\n        <a href={character.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={character.image_url}\r\n              title={character.rank ? character.title : character.name}\r\n            />\r\n\r\n            <CardContent className={classes.characterInfo}>\r\n              <Typography gutterBottom variant=\"body2\" component=\"span\">\r\n                {character.rank ? `#${character.rank} ${character.title}` : character.name}\r\n              </Typography>\r\n\r\n              <Typography variant=\"caption\" component=\"span\">\r\n                <Paper className={classes.favorite} elevation={0}>\r\n                  <FavoriteIcon\r\n                    style={{ marginRight: 2 }}\r\n                    color=\"primary\"\r\n                  />\r\n                  {character.favorites && character.favorites.toLocaleString()}\r\n                </Paper>\r\n              </Typography>\r\n            </CardContent>\r\n\r\n          </CardActionArea>\r\n        </a>\r\n      </Card>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <form\r\n        className={classes.search}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {searchField()}\r\n      </form>\r\n\r\n      <div className={classes.characterContainer}>\r\n        {character}\r\n      </div>\r\n\r\n      <div className={classes.paginationContainer}>\r\n        <Pagination\r\n          count={50}\r\n          page={page}\r\n          onChange={handlePageChange}\r\n          color=\"primary\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopCharacters;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  search: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '5%',\r\n    paddingTop: '0.5rem',\r\n    paddingBottom: '2rem'\r\n  },\r\n  mangaContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    gap: '10px',\r\n    justifyContent: 'center',\r\n    paddingBottom: '2rem'\r\n  },\r\n  paginationContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  card: {\r\n    width: 250,\r\n  },\r\n  media: {\r\n    height: 350,\r\n  },\r\n  mangaInfo: {\r\n    display: 'flex',\r\n    alignItems: 'top',\r\n    justifyContent: 'space-between'\r\n  },\r\n  rating: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 0,\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nconst BASE_API = 'https://api.jikan.moe/v3';\r\n\r\nexport const TopManga = () => {\r\n  const classes = useStyles();\r\n\r\n  const [searchText, setSearchText] = useState('');\r\n  const [topManga, setTopManga] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const handlePageChange = (e, value) => {\r\n    setPage(value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios.get(`${BASE_API}/top/manga/${page}`)\r\n      .then(res => {\r\n        const manga = res.data.top;\r\n\r\n        setTopManga(manga);\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }, [page]);\r\n\r\n  // console.log(topManga);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (searchText.length >= 3) {\r\n      axios.get(`${BASE_API}/search/manga?q=${searchText}`)\r\n        .then(res => {\r\n          const results = res.data.results;\r\n\r\n          setTopManga(results);\r\n          // console.log(results);\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n\r\n      setSearchText('');\r\n    }\r\n  }\r\n\r\n  const searchField = () => {\r\n    return (\r\n      <TextField\r\n        id=\"searchManga\"\r\n        type=\"search\"\r\n        label=\"Search Manga\"\r\n        variant=\"outlined\"\r\n        onChange={(e) => setSearchText(e.target.value)}\r\n        value={searchText}\r\n        fullWidth\r\n      />\r\n    )\r\n  }\r\n\r\n  const manga = topManga.map(manga => {\r\n    return (\r\n      <Card className={classes.card} key={manga.mal_id}>\r\n        <a href={manga.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={manga.image_url}\r\n              title={manga.title}\r\n            />\r\n\r\n            <CardContent className={classes.mangaInfo}>\r\n              <Typography gutterBottom variant=\"body2\" component=\"span\">\r\n                {manga.rank ? `#${manga.rank} ${manga.title}` : manga.title}\r\n              </Typography>\r\n\r\n              <Typography variant=\"caption\" component=\"span\">\r\n                <Paper className={classes.rating} elevation={0}>\r\n                  <StarIcon style={{ marginRight: 2 }} color=\"primary\" />{manga.score}\r\n                </Paper>\r\n              </Typography>\r\n            </CardContent>\r\n\r\n          </CardActionArea>\r\n        </a>\r\n      </Card>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <form\r\n        className={classes.search}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {searchField()}\r\n      </form>\r\n\r\n      <div className={classes.mangaContainer}>\r\n        {manga}\r\n      </div>\r\n\r\n      <div className={classes.paginationContainer}>\r\n        <Pagination\r\n          count={50}\r\n          page={page}\r\n          onChange={handlePageChange}\r\n          color=\"primary\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopManga;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <footer\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          paddingLeft: '7%',\r\n          paddingRight: '7%',\r\n          padding: '1rem'\r\n        }}\r\n      >\r\n        <small>&copy; Copyright 2020</small>\r\n        <small style={{ display: 'flex', alignItems: 'center' }}>\r\n          Made with\r\n          <FavoriteIcon\r\n            style={{ margin: 2 }}\r\n            color=\"#fff\"\r\n          /> by VJ\r\n        </small>\r\n      </footer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport PropTypes from 'prop-types';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nimport Navbar from './components/Navbar';\nimport TopAnime from './components/TopAnime';\nimport TopCharacters from './components/TopCharacters';\nimport TopManga from './components/TopManga';\nimport Footer from './components/Footer';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#512ca8'\n    },\n    secondary: {\n      main: '#000'\n    },\n  },\n});\n\nconst TabPanel = (props) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`tabpanel-${index}`}\n      aria-labelledby={`tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography\n            component={'span'}\n            variant={'body2'}\n          >\n            {children}\n          </Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `tab-${index}`,\n    'aria-controls': `tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  footerContainer: {\n    backgroundColor: '#512ca8',\n    color: 'white',\n  }\n}));\n\n\nexport const App = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Navbar />\n      <div className={classes.root}>\n        <AppBar position=\"sticky\" color=\"secondary\">\n          <Container maxWidth=\"lg\">\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              aria-label=\"fanime tabs\"\n              indicatorColor=\"primary\"\n              centered\n            >\n              <Tab label=\"Anime\" {...a11yProps(0)} />\n              <Tab label=\"Characters\" {...a11yProps(1)} />\n              <Tab label=\"Manga\" {...a11yProps(2)} />\n            </Tabs>\n          </Container>\n        </AppBar>\n        <Container maxWidth=\"lg\">\n          <TabPanel value={value} index={0}>\n            <TopAnime />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <TopCharacters />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <TopManga />\n          </TabPanel>\n        </Container>\n      </div>\n      <div className={classes.footerContainer}>\n        <Footer />\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}